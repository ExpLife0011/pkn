#include "RegistryDriverLoader.h"

#include <windows.h> 
#include <winsvc.h> 
#include <conio.h> 
#include <stdio.h>
#include <string>
#include <iostream>
#include <filesystem>
#include "../utils/Privilege.hpp"

namespace pkn
{
bool RegistryDriverLoader::enable_load_driver_privilege()
{
//#define ENABLE_PRIVILEGE(name) if (!pkn::Privilege::enable_privilege(name)) {printf("failed to enable : %s\n", name);}
#define ENABLE_PRIVILEGE(name) if (!pkn::Privilege::enable_privilege(name)) return false
    //ENABLE_PRIVILEGE(SE_CREATE_TOKEN_NAME);
    //ENABLE_PRIVILEGE(SE_ASSIGNPRIMARYTOKEN_NAME);
    //ENABLE_PRIVILEGE(SE_LOCK_MEMORY_NAME);
    //ENABLE_PRIVILEGE(SE_INCREASE_QUOTA_NAME);
    //ENABLE_PRIVILEGE(SE_UNSOLICITED_INPUT_NAME);
    //ENABLE_PRIVILEGE(SE_MACHINE_ACCOUNT_NAME);
    //ENABLE_PRIVILEGE(SE_TCB_NAME);
    //ENABLE_PRIVILEGE(SE_SECURITY_NAME);
    //ENABLE_PRIVILEGE(SE_TAKE_OWNERSHIP_NAME);
    ENABLE_PRIVILEGE(SE_LOAD_DRIVER_NAME);
    //ENABLE_PRIVILEGE(SE_SYSTEM_PROFILE_NAME);
    //ENABLE_PRIVILEGE(SE_SYSTEMTIME_NAME);
    //ENABLE_PRIVILEGE(SE_PROF_SINGLE_PROCESS_NAME);
    //ENABLE_PRIVILEGE(SE_INC_BASE_PRIORITY_NAME);
    //ENABLE_PRIVILEGE(SE_CREATE_PAGEFILE_NAME);
    //ENABLE_PRIVILEGE(SE_CREATE_PERMANENT_NAME);
    //ENABLE_PRIVILEGE(SE_BACKUP_NAME);
    //ENABLE_PRIVILEGE(SE_RESTORE_NAME);
    //ENABLE_PRIVILEGE(SE_SHUTDOWN_NAME);
    //ENABLE_PRIVILEGE(SE_DEBUG_NAME);
    //ENABLE_PRIVILEGE(SE_AUDIT_NAME);
    //ENABLE_PRIVILEGE(SE_SYSTEM_ENVIRONMENT_NAME);
    //ENABLE_PRIVILEGE(SE_CHANGE_NOTIFY_NAME);
    //ENABLE_PRIVILEGE(SE_REMOTE_SHUTDOWN_NAME);
    //ENABLE_PRIVILEGE(SE_UNDOCK_NAME);
    //ENABLE_PRIVILEGE(SE_SYNC_AGENT_NAME);
    //ENABLE_PRIVILEGE(SE_ENABLE_DELEGATION_NAME);
    //ENABLE_PRIVILEGE(SE_MANAGE_VOLUME_NAME);
    //ENABLE_PRIVILEGE(SE_IMPERSONATE_NAME);
    //ENABLE_PRIVILEGE(SE_CREATE_GLOBAL_NAME);
    //ENABLE_PRIVILEGE(SE_TRUSTED_CREDMAN_ACCESS_NAME);
    //ENABLE_PRIVILEGE(SE_RELABEL_NAME);
    //ENABLE_PRIVILEGE(SE_INC_WORKING_SET_NAME);
    //ENABLE_PRIVILEGE(SE_TIME_ZONE_NAME);
    //ENABLE_PRIVILEGE(SE_CREATE_SYMBOLIC_LINK_NAME);
    //ENABLE_PRIVILEGE(SE_DELEGATE_SESSION_USER_IMPERSONATE_NAME);
    return true;
}
}
